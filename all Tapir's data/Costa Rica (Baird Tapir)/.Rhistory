library(readr)
fakedata <- read_csv("School docs/Service learning/fakedata.csv")
View(fakedata)
SELECT * from fakedata limit=10
reticulate::repl_python()
import python
y
Y
reticulate::repl_python()
import python
Y
reticulate::repl_python()
y= sqrt(x)
install miniconda
install.packages(miniconda)
library(reticulate)
install(reticulate)
instal.packages(reticulate)
install.packages("reticulate")
plot(cars)
mean(cars)
mean(cars$speed)
CamSurvey <- read.csv("C:/Users/chris/Documents/SchoolDocs_implemented/University/Unix and Python/Assignments/Assignment 9/CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North.csv", header=FALSE)
View(CamSurvey)
new_headers <- as.character(data[1,])
# Print the updated dataset
print(CamSurvey)
open(CamSurvey)
CamSurvey
View(CamSurvey)
new_headers <- as.character(data[1,])
View(CamSurvey)
new_headers <- as.string(data[1,])
new_headers <- as.character(data[1,])
CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North <- read.csv("C:/Users/chris/Documents/SchoolDocs_implemented/University/Unix and Python/Assignments/Assignment 9/CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North - CR_Dataset03_North.csv")
View(CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North)
data<- CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North
mean(data)
data<- read.csv("CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North")
mean(data$Latitud)
data<- "CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North...CR_Dataset03_North"
mean(data$Latitud)
Sys.time()
Sys.time()
dir()
cdir
setwd("~Reasearch")
setwd("~Reasearch/")
setwd("~/Reasearch/")
setwd("~/Reasearch")
setwd(""C:\Users\chris\Documents\Research"")
setwd("C:\Users\chris\Documents\Research)
setwd("C:\Users\chris\Documents\Research")
setwd("Users\chris\Documents\Research")
getwd()
chars<- letters[1:26]
nums<- c([1:26])
nums<- c(seq([1:26]))
nums<- seq([1:26])
nums<- seq(1,26)
objs<- chars = nums
objs<- setNames(nums, chars)
objs
get(objs)
for (obj in mylist){
print(obj)
x<- get(obj)
print(log(x))
}
A<- 1
B<- 10
C<- 100
D<- 1000
E<- 10000
mylist<- list(A, B, C, D, E)
for (obj in mylist){
print(obj)
x<- get(obj)
print(log(x))
}
result<- try({
x<- get(obj)
}, silent = TRUE)
isFALSE(result)
isTRUE(result)
print(obj)
for (obj in mylist){
print(obj)
print(log(x))
}
for (obj in mylist){
print(obj)
print(log(obj))
}
for (obj in mylist){
print(paste(obj, log(obj)))
}
plot(mylist, log(mylist))
plot(mylist, log(mylist[]))
mylist
logs<- log(mylist)
logs<- log(as.integer(mylist))
plot(mylist, logs)
plot(logs, mylist)
nums<- seq(1:100000, length.out = 50 )
nums<- runif(10000, 0, 1000)
nums
x<- runif(10000, 0, 1000)
y<- log(x)
plot(x, y)
plot(log(x), y)
plot(x, y)
xnorm<- rnorm(10000, 50, 20)
plot(xnorm, y)
y<- log(x)
plot(xnorm, y)
ynorm<- log(xnorm)
plot(xnorm, ynorm)
rm(list = ls())
library(ggplot2)
require(rgl)
require(lubridate)
setwd("C:/Users/chris/Documents/Research")
df<- read.csv("Tapir Research/Code and Data/all Tapir's data/Malaysia (Malayan Tapir)/Ma_T_Final_Covs.csv")
df<- na.omit(df)
#small.df <- df[sample(nrow(df), 2000), ]
x<- as.numeric(df$Precip)
y<- as.numeric(df$Elev)
z<- as.numeric(df$d.Road)
data<- data.frame(x,y,z)
labs<- c("precip",  "elev", "d.road")
names(data)<- labs
open3d()
#---------------------------------------
x<- seq(1, 10, length.out = 20)
y <- 1/(1+exp(1)^x)#x
f <- function(x, y) { r <- 1/(1+exp(1)^x);r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
# Draw the surface twice:  the first draws the solid part,
# the second draws the grid.  Offset the first so it doesn't
# obscure the lines.
myplot<- function(x,y,z){
par3d(windowRect = c(20, 30, 800, 800))
bgplot3d(color = "white", expression = NULL)
persp3d(x, y, z, aspect = c(1, 1, 0.5), col = "lightblue",
xlab = "X", ylab = "Y", zlab = deparse(f),
polygon_offset = 1)
persp3d(x, y, z, front = "lines", back = "lines",
lit = FALSE, add = TRUE)
}
myplot(x,y,z)
#---------------------------------------------
setwd("C:/Users/chris/Documents/Research/Tapir Research/Code and Data/all Tapir's data/Costa Rica (Baird Tapir)/")
df<- read.csv("cv_t3.csv")
df<- na.omit(df)
names(df)
data<- data.frame(x,y,z)
x<- as.numeric(df$Forest)
y<- as.numeric(df$EdgeDens)
z<- as.numeric(df$d.Road)
data<- data.frame(x,y,z)
labs<- c("forest",  "edgedens", "d.road")
names(data)<- labs
open3d()
# Draw the surface twice:  the first draws the solid part,
# the second draws the grid.  Offset the first so it doesn't
# obscure the lines.
myplot<- function(x,y,z){
par3d(windowRect = c(20, 30, 800, 800))
bgplot3d(color = "white", expression = NULL)
persp3d(x, y, z, aspect = c(1, 1, 0.5), col = "lightblue",
xlab = "X", ylab = "Y", zlab = deparse(f),
polygon_offset = 1)
persp3d(x, y, z, front = "lines", back = "lines",
lit = FALSE, add = TRUE)
}
myplot(x,y,z)
plot3d(x, y, z, xlab = labs[1], ylab = labs[2], zlab= labs[3], type = 's',
size = .75, lit = FALSE)
surface3d(x,y,z, alpha= .4, front = "lines", back = "lines")
#bbox3d(col= "white", emission= "green")
axes3d()
par3d(windowRect = c(20, 30, 800, 800))
plot3d(x, y, z, xlab = labs[1], ylab = labs[2], zlab= labs[3], type = 's',
size = .75, lit = FALSE)
y<- as.numeric(df$HFI)
labs<- c("forest",  "HFI", "d.road")
names(data)<- labs
open3d()
par3d(windowRect = c(20, 30, 800, 800))
plot3d(x, y, z, xlab = labs[1], ylab = labs[2], zlab= labs[3], type = 's',
size = .75, lit = FALSE)
x<- as.numeric(df$d.River)
y<- as.numeric(df$Elev)
z<- as.numeric(df$d.Road)
data<- data.frame(x,y,z)
labs<- c("d.river",  "Elev", "d.road")
names(data)<- labs
open3d()
par3d(windowRect = c(20, 30, 800, 800))
plot3d(x, y, z, xlab = labs[1], ylab = labs[2], zlab= labs[3], type = 's',
size = .75, lit = FALSE)
